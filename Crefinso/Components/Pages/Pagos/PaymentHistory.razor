@page "/paymentHistory/{prestamoId:int}"
@using Crefinso.DTOs
@using Crefinso.Services.Pagos
@inject PaymentServices PaymentServices
@inject NavigationManager NavigationManager

@if (futurePayments == null)
{
    <p>Cargando...</p>
}
else if (errorMessage != null)
{
    <p class="text-red-500">Error: @errorMessage</p>
}
else
{
    <section class="container mx-auto p-6">
        <div class="rounded-lg border bg-white shadow-md">
            <div class="p-6 flex flex-col gap-6">
                <div class="flex items-center justify-between">
                    <h1 class="text-4xl font-bold">Historial de Pagos</h1>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    @foreach (var payment in futurePayments)
                    {
                        <div class="rounded-lg border bg-card text-card-foreground shadow-sm w-full max-w-md">
                            <!-- Header -->
                            <div class="p-6 flex flex-row items-center justify-between space-y-0 pb-2">
                                <h3 class="tracking-tight text-2xl font-bold">Pago #@payment.PagoId</h3>
                                <div class="inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent hover:bg-primary/80 bg-yellow-500 text-white">
                                    @payment.Estado
                                </div>
                            </div>

                            <!-- Content -->
                            <div class="p-6 pt-0 grid gap-4">
                                <!-- Loan and Date Info -->
                                <div class="grid gap-2">
                                    <div class="flex items-center gap-2 text-sm text-muted-foreground">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-credit-card h-4 w-4">
                                            <rect width="20" height="14" x="2" y="5" rx="2"></rect>
                                            <line x1="2" x2="22" y1="10" y2="10"></line>
                                        </svg>
                                        <span>Código del Préstamo: @payment.PrestamoId</span>
                                    </div>
                                    <div class="flex items-center gap-2 text-sm text-muted-foreground">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar h-4 w-4">
                                            <path d="M8 2v4"></path>
                                            <path d="M16 2v4"></path>
                                            <rect width="18" height="18" x="3" y="4" rx="2"></rect>
                                            <path d="M3 10h18"></path>
                                        </svg>
                                        <span>Fecha de Pago: @payment.FechaPago.ToShortDateString()</span>
                                    </div>
                                </div>

                                <!-- Payment Details -->
                                <div class="grid gap-2">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm font-medium">Monto a Pagar:</span>
                                        <div class="flex items-center gap-1">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-dollar-sign h-4 w-4 text-green-500">
                                                <line x1="12" x2="12" y1="2" y2="22"></line>
                                                <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
                                            </svg>
                                            <span class="text-lg font-bold">@payment.MontoAPagar</span>
                                        </div>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm font-medium">Saldo Acumulado:</span>
                                        <div class="flex items-center gap-1">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-alert h-4 w-4 text-blue-500">
                                                <circle cx="12" cy="12" r="10"></circle>
                                                <line x1="12" x2="12" y1="8" y2="12"></line>
                                                <line x1="12" x2="12.01" y1="16" y2="16"></line>
                                            </svg>
                                            <span class="text-lg font-bold">@payment.SaldoAcumulado</span>
                                        </div>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm font-medium">Monto Pagado:</span>
                                        <div class="flex items-center gap-1">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-dollar-sign h-4 w-4 text-green-500">
                                                <line x1="12" x2="12" y1="2" y2="22"></line>
                                                <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
                                            </svg>
                                            <span class="text-lg font-bold">$0.00</span> <!-- Aquí puedes agregar el monto pagado si lo tienes -->
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Footer Button -->
                            <div class="flex items-center p-6 pt-0">
                                <button class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus:visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 bg-green-600 text-white hover:bg-primary/90 h-10 px-4 py-2 w-full"
                                        @onclick="() => RedirectToCreatePayment(payment.PagoId)">
                                    Registrar Pago
                                </button>
                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>
    </section>
}

@code {
    [Parameter]
    public int PrestamoId { get; set; }

    private List<PagoFuturoResponse> futurePayments = new List<PagoFuturoResponse>();
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Obtener los pagos futuros desde el servicio
            futurePayments = await PaymentServices.GetPagosFuturos(PrestamoId);
        }
        catch (HttpRequestException ex)
        {
            errorMessage = "Error al obtener los pagos futuros. Por favor, inténtalo de nuevo más tarde.";
            Console.WriteLine($"Error en OnInitializedAsync: {ex.Message}");
        }
        catch (Exception ex)
        {
            errorMessage = "Ocurrió un error inesperado. Por favor, contacta al soporte técnico.";
            Console.WriteLine($"Error en OnInitializedAsync: {ex.Message}");
        }
    }

    private void RedirectToCreatePayment(int pagoId)
    {
        // Redirigir a la página de registro de pagos con el ID del pago
        NavigationManager.NavigateTo($"/createPayment/{pagoId}");
    }
}