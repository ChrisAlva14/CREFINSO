@page "/generateReceiptPayment/{pagoId:int}"
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject PaymentServices paymentService

@using Crefinso.DTOs
@using Crefinso.Services.Pagos
@inject AuthServices authServices
@using Crefinso.Services

@code {
    [Parameter]
    public int PagoId { get; set; }

    private bool isAuthenticated;
    private PagoCompletoResponse pagoCompleto;
    private string loggedInUsername; // Propiedad para almacenar el nombre del usuario logueado
    private decimal currentBalance; // Propiedad para almacenar el saldo actual
    private List<PagoCompletoResponse> pagosCompletos; // Lista de todos los pagos

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isAuthenticated = await authServices.IsAuthenticatedAsync();
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Obtener todos los pagos
            pagosCompletos = await paymentService.GetPagosCompletos();

            // Obtener el pago actual
            pagoCompleto = pagosCompletos.FirstOrDefault(p => p.PagoId == PagoId);

            if (pagoCompleto == null)
            {
                // Mostrar un mensaje de error o redirigir a una página de error
                Console.Error.WriteLine("No se encontró el pago con el ID proporcionado.");
            }

            // Calcular el saldo anterior (antes del pago actual)
            currentBalance = CalculateCurrentBalance(pagoCompleto.Prestamo?.MontoAprobado ?? 0, pagoCompleto.PrestamoId);

            loggedInUsername = await authServices.GetUsernameAsync();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error al cargar el pago: {ex.Message}");
        }
    }

    // Método para calcular el saldo anterior (antes del pago actual)
    private decimal CalculateCurrentBalance(decimal montoAprobado, int prestamoId)
    {
        // Filtrar los pagos correspondientes al préstamo actual y que sean anteriores al pago actual
        var pagosAnteriores = pagosCompletos
            .Where(p => p.PrestamoId == prestamoId && p.PagoId < PagoId)
            .OrderBy(p => p.PagoId)
            .ToList();

        decimal saldoAnterior = montoAprobado;

        // Calcular el saldo acumulado restando el capital de cada pago anterior
        foreach (var pago in pagosAnteriores)
        {
            decimal capital = paymentService.CalculateCapital(saldoAnterior, pago.MontoPagado, pago.Prestamo?.TasaInteres ?? 0);
            saldoAnterior = paymentService.CalculateNewBalance(saldoAnterior, capital);
        }

        return saldoAnterior;
    }

    // Método para asegurar que el pago no exceda el saldo anterior
    private decimal CalculateSafePayment(decimal previousBalance, decimal paymentAmount)
    {
        return paymentAmount > previousBalance ? previousBalance : paymentAmount;
    }

    private async Task PrintReceipt()
    {
        await JS.InvokeVoidAsync("printSection", "printable-section");
    }

    private async Task DescargarPdf()
    {
        // Genera el nombre del archivo con el ID del pago
        string fileName = $"ComprobanteDePago_{pagoCompleto.PagoId}.pdf";

        // Llama a la función JavaScript para generar el PDF
        await JS.InvokeVoidAsync("generatePdf", "printable-section", fileName);
    }

    private async Task BackPage()
    {
        await SomeAsyncOperation();
        Navigation.NavigateTo("/payments");
    }

    private async Task SomeAsyncOperation()
    {
        await Task.Delay(1000);
    }
}

@if (pagoCompleto == null)
{
}
else if (isAuthenticated)
{
    <div class="h-full p-4 dark-text-secondary">
        <div class="max-w-5xl mx-auto flex flex-col lg:flex-row gap-6">
            <!-- Contenido principal -->
            <section id="printable-section" class="printable-area flex-1 rounded-lg border">
                <div class="rounded-lg bg-white p-6 shadow-lg">
                    <!-- Encabezado -->
                    <div class="space-y-2 border-b border-gray-200 pb-4 text-center">
                        <div class="flex items-center justify-between">
                            <!-- Logo -->
                            <div class="flex flex-1 justify-start">
                                <img alt="Crefinso Logo" width="160" height="48" class="mb-4" src="logoCrefinsowhite.png" id="logo" />
                            </div>
                            <!-- Recibo de Ingreso -->
                            <div class="flex flex-1 justify-end">
                                <div class="border-2 border-red-600 px-4 py-2">
                                    <p class="text-sm font-bold text-red-600">RECIBO DE INGRESO</p>
                                    <p class="text-center text-xl font-bold text-red-600">@pagoCompleto.PagoId</p>
                                </div>
                            </div>
                        </div>
                        <!-- Nombre de la Asociación -->
                        <div class="mt-4 w-full text-center">
                            <h1 class="text-xl font-bold">ASOCIACIÓN COOPERATIVA DE AHORRO Y CRÉDITO</h1>
                            <h2 class="text-lg font-semibold">CRECIMIENTO FINANCIERO DE SONSONATE DE R.L.</h2>
                        </div>
                        <!-- Título del comprobante -->
                        <div class="mt-4 text-center font-semibold">COMPROBANTE DE PAGO DE PRÉSTAMO</div>
                    </div>

                    <!-- Información del cliente -->
                    <div class="mt-4 grid grid-cols-1 gap-4 rounded-lg border border-gray-200 bg-white p-4 md:grid-cols-2">
                        <div>
                            <div class="mb-1 flex items-center gap-2 text-gray-500">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user h-4 w-4">
                                    <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"></path>
                                    <circle cx="12" cy="7" r="4"></circle>
                                </svg>
                                <span class="text-sm">Nombre</span>
                            </div>
                            <p class="text-sm font-semibold">@pagoCompleto.Cliente?.Nombre</p>
                        </div>
                        <div>
                            <div class="mb-1 flex items-center gap-2 text-gray-500">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-hash h-4 w-4">
                                    <line x1="4" x2="20" y1="9" y2="9"></line>
                                    <line x1="4" x2="20" y1="15" y2="15"></line>
                                    <line x1="10" x2="8" y1="3" y2="21"></line>
                                    <line x1="16" x2="14" y1="3" y2="21"></line>
                                </svg>
                                <span class="text-sm">Código Cliente</span>
                            </div>
                            <p class="text-sm font-semibold">@pagoCompleto.Cliente?.ClienteId</p>
                        </div>
                        <div>
                            <div class="mb-1 flex items-center gap-2 text-gray-500">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar-days h-4 w-4">
                                    <path d="M8 2v4"></path>
                                    <path d="M16 2v4"></path>
                                    <rect width="18" height="18" x="3" y="4" rx="2"></rect>
                                    <path d="M3 10h18"></path>
                                    <path d="M8 14h.01"></path>
                                    <path d="M12 14h.01"></path>
                                    <path d="M16 14h.01"></path>
                                    <path d="M8 18h.01"></path>
                                    <path d="M12 18h.01"></path>
                                    <path d="M16 18h.01"></path>
                                </svg>
                                <span class="text-sm">Fecha de Pago:</span>
                            </div>
                            <p class="text-sm font-semibold">@pagoCompleto.FechaPago.ToShortDateString()</p>
                        </div>
                        <div>
                            <div class="mb-1 flex items-center gap-2 text-gray-500">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-receipt h-4 w-4">
                                    <path d="M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z"></path>
                                    <path d="M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"></path>
                                    <path d="M12 17.5v-11"></path>
                                </svg>
                                <span class="text-sm">Pago de Cuota:</span>
                            </div>
                            <p class="text-sm font-semibold text-blue-600">$ @pagoCompleto.MontoPagado</p>
                        </div>
                    </div>

                    <!-- Detalles del pago -->
                    <div class="mt-4 rounded-lg border border-gray-200 bg-white p-4">
                        <table class="w-full text-sm">
                            <tbody>
                                <tr class="border-b border-gray-200">
                                    <td class="py-2 font-medium">SALDO ANTERIOR</td>
                                    <td class="py-2 text-right">$ @currentBalance.ToString("N2")</td>
                                </tr>
                                <tr class="border-b border-gray-200">
                                    <td class="py-2 font-medium">CAPITAL</td>
                                    <td class="py-2 text-right">
                                        $ @{
                                            decimal safePayment = CalculateSafePayment(currentBalance, pagoCompleto.MontoPagado);
                                            decimal capital = paymentService.CalculateCapital(currentBalance, safePayment, pagoCompleto.Prestamo?.TasaInteres ?? 0);
                                            @capital.ToString("N2")
                                        }
                                    </td>
                                </tr>
                                <tr class="border-b border-gray-200">
                                    <td class="py-2 font-medium">INTERES</td>
                                    <td class="py-2 text-right">
                                        $ @paymentService.CalculateInterest(currentBalance, pagoCompleto.Prestamo?.TasaInteres ?? 0, 1).ToString("N2")
                                    </td>
                                </tr>
                                <tr>
                                    <td class="py-2 font-medium">NUEVO SALDO</td>
                                    <td class="py-2 text-right font-semibold">
                                        $ @{
                                            decimal newBalance = paymentService.CalculateNewBalance(currentBalance, capital);
                                            @newBalance.ToString("N2")
                                        }
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Firmas -->
                    <div class="grid grid-cols-2 gap-6 pt-8">
                        <div class="text-center">
                            <div class="border-t border-gray-300 pt-2">
                                <p class="text-sm font-semibold">@loggedInUsername</p>
                                <p class="text-xs text-gray-500">Recibió</p>
                            </div>
                        </div>
                        <div class="text-center">
                            <div class="border-t border-gray-300 pt-2">
                                <p class="text-sm font-semibold">@pagoCompleto.Cliente?.Nombre</p>
                                <p class="text-xs text-gray-500">Entregó</p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Botones de acción -->
            <div class="lg:w-48 print:hidden">
                <div class="bg-white p-4 border rounded-lg shadow-lg lg:sticky lg:top-4">
                    <div class="flex flex-row lg:flex-col gap-2">
                        <button @onclick="DescargarPdf" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 bg-black text-white hover:bg-primary/90 h-10 px-4 py-2 flex-1 gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-download h-4 w-4">
                                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                                <polyline points="7 10 12 15 17 10"></polyline>
                                <line x1="12" x2="12" y1="15" y2="3"></line>
                            </svg>
                            Descargar
                        </button>
                        <button @onclick="PrintReceipt" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 flex-1 gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-printer h-4 w-4">
                                <path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path>
                                <path d="M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6"></path>
                                <rect x="6" y="14" width="12" height="8" rx="1"></rect>
                            </svg>
                            Imprimir
                        </button>
                        <button @onclick="BackPage" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 flex-1 gap-2">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M9 15 3 9m0 0 6-6M3 9h12a6 6 0 0 1 0 12h-3" />
                            </svg>

                            Volver
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}