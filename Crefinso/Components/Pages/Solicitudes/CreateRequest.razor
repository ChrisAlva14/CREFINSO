@page "/createRequest"
@using Crefinso.Services.Clientes
@using Crefinso.Services.Solicitudes
@using Crefinso.DTOs
@using Crefinso.Services.Usuarios
@inject IJSRuntime JS
@inject SweetAlertService Swal
@inject NavigationManager NavigationManager
@inject RequestServices requestService
@inject ClientServices clientService
@inject UserServices userServices


@code {
    private string errorMessage;
    private SolicitudRequest newSolicitud = new SolicitudRequest();
    private List<ClienteResponse> clientes;
    private List<UserResponse> usuarios;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Cargar clientes y usuarios al inicializar el componente
            var tasks = new List<Task>
            {
                LoadClientes(),
                LoadUsuarios()
            };

            await Task.WhenAll(tasks);
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            await Swal.FireAsync("<span style='color:red'>Error</span>", "Error al cargar los datos iniciales", SweetAlertIcon.Error);
        }
    }

    private async Task LoadClientes()
    {
        clientes = await clientService.GetClientes();
    }

    private async Task LoadUsuarios()
    {
        usuarios = await userServices.GetUsers();
    }


    // Propiedad auxiliar para la conversión de ClienteID a string
    private string ClienteIDString
    {
        get => newSolicitud.ClienteID.ToString();
        set
        {
            if (int.TryParse(value, out int id))
            {
                newSolicitud.ClienteID = id;
            }
        }
    }

    private string UserIDString
    {
        get => newSolicitud.UserID.ToString();
        set
        {
            if (int.TryParse(value, out int id))
            {
                newSolicitud.UserID = id;
            }
        }
    }

    //CREAR CLIENTE NUEVO
    private async Task HandleCreateRequest()
    {
        try
        {
            bool success = await requestService.PostSolicitud(newSolicitud);
            if (success)
            {
                // Limpia el formulario
                newSolicitud = new SolicitudRequest();
                // Muestra una alerta de éxito
                await Swal.FireAsync("<span style='color:green'>Éxito</span>", "Solicitud creada correctamente", SweetAlertIcon.Success);

                // Redirige a la página de clientes
                NavigationManager.NavigateTo("/request");
            }
            else
            {
                await Swal.FireAsync("<span style='color:red'>Error</span>", "No se pudo crear la solicitud", SweetAlertIcon.Error);
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            await Swal.FireAsync("<span style='color:red'>Error</span>", "Hubo un error al crear la solicitud", SweetAlertIcon.Error);
        }
    }

    // Método para manejar el clic en el botón "Cancelar"
    private void HandleCancel()
    {
        NavigationManager.NavigateTo("/request");
    }
}

<section class="w-full flex items-center justify-center p-6">
        <div class="rounded-lg border bg-white shadow-xl w-full max-w-4xl">
            <div class="flex flex-col p-6 space-y-1">
                <h3 class="tracking-tight text-3xl font-bold text-center">Nueva Solicitud de Préstamo</h3>
                <p class="text-sm text-gray-500 text-center">Ingrese los detalles de la nueva solicitud de préstamo</p>
            </div>
        <EditForm class="p-6 pt-0 space-y-6" Model="newSolicitud" OnValidSubmit="HandleCreateRequest">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="space-y-2">
                        <label class="text-sm font-medium flex items-center gap-2" for="ClienteID">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user w-4 h-4">
                                <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"></path>
                                <circle cx="12" cy="7" r="4"></circle>
                            </svg>
                            Código Cliente
                        </label>
                    <select @bind="ClienteIDString" class="flex h-10 rounded-md border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 w-full" id="UserID" required name="UserID">
                        <option value="">Seleccione un usuario</option>
                        @if (clientes != null)
                        {
                            @foreach (var cliente in clientes)
                            {
                                <option value="@cliente.ClienteId">@cliente.Nombre</option>
                            }
                        }
                    </select>
                    </div>

                    <div class="space-y-2">
                        <label class="text-sm font-medium flex items-center gap-2" for="Estado">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-file-text w-4 h-4">
                            <path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"></path>
                            <path d="M14 2v4a2 2 0 0 0 2 2h4"></path>
                            <path d="M10 9H8"></path>
                            <path d="M16 13H8"></path>
                            <path d="M16 17H8"></path>
                            </svg>
                            Estado
                        </label>
                    <InputSelect @bind-Value="newSolicitud.Estado" id="Estado" name="Estado" class="flex h-10 w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required>
                        <option value="">Seleccione un estado</option>
                        <option value="Pendiente">Pendiente</option>
                        <option value="Aprobado">Aprobado</option>
                        <option value="Rechazado">Rechazado</option>
                    </InputSelect>
                </div>
                    <div class="space-y-2">
                        <label class="text-sm font-medium flex items-center gap-2" for="FechaSolicitud">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar w-4 h-4">
                                <path d="M8 2v4"></path>
                                <path d="M16 2v4"></path>
                                <rect width="18" height="18" x="3" y="4" rx="2"></rect>
                                <path d="M3 10h18"></path>
                            </svg>
                            Fecha de Solicitud
                        </label>
                        <InputDate @bind-Value="newSolicitud.FechaSolicitud" id="FechaSolicitud" class="flex h-10 w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required name="FechaSolicitud" />
                    </div>
                    <div class="space-y-2">
                        <label class="text-sm font-medium flex items-center gap-2" for="CantidadSolicitada">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-dollar-sign w-4 h-4">
                                <line x1="12" x2="12" y1="2" y2="22"></line>
                                <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
                            </svg>
                            Cantidad Solicitada
                        </label>
                        <InputNumber id="CantidadSolicitada" class="flex h-10 w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required type="number" @bind-Value="newSolicitud.CantidadSolicitada" min="1" name="CantidadSolicitada" />
                    </div>
                    <div class="space-y-2 md:col-span-2">
                        <label class="text-sm font-medium flex items-center gap-2" for="DestinoPrestamo">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-file-text w-4 h-4">
                                <path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"></path>
                                <path d="M14 2v4a2 2 0 0 0 2 2h4"></path>
                                <path d="M10 9H8"></path>
                                <path d="M16 13H8"></path>
                                <path d="M16 17H8"></path>
                            </svg>
                            Destino del Préstamo
                        </label>
                    <InputText @bind-Value="newSolicitud.DestinoPrestamo" id="DestinoPrestamo" class="flex h-10 w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" required type="text" name="DestinoPrestamo" autocomplete="off" />
                    </div>
                    
                    <div class="space-y-2">
                        <label class="text-sm font-medium flex items-center gap-2" for="FechaAnalisis">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar w-4 h-4">
                                <path d="M8 2v4"></path>
                                <path d="M16 2v4"></path>
                                <rect width="18" height="18" x="3" y="4" rx="2"></rect>
                                <path d="M3 10h18"></path>
                            </svg>
                            Fecha de Análisis
                        </label>
                    <InputDate @bind-Value="newSolicitud.FechaAnalisis" id="FechaAnalisis" class="flex h-10 w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" name="FechaAnalisis" />
                    </div>
                    <div class="space-y-2">
                        <label class="text-sm font-medium flex items-center gap-2" for="UserID">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user w-4 h-4">
                                <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"></path>
                                <circle cx="12" cy="7" r="4"></circle>
                            </svg>
                            Codigo del Empleado
                        </label>
                    <select @bind="UserIDString" class="flex h-10 rounded-md border border-gray-300 bg-white px-3 py-2 text-sm text-gray-900 placeholder:text-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 w-full" id="UserID" required name="UserID">
                        <option value="">Seleccione un usuario</option>
                        @if (usuarios != null)
                        {
                            @foreach (var user in usuarios)
                            {
                                <option value="@user.UserId">@user.UserName</option>
                            }
                        }
                    </select>
                    </div>
                </div>
                <div class="flex justify-end space-x-4">
                <button type="button" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-gray-300 bg-white hover:bg-gray-200 h-10 px-4 py-2" @onclick="HandleCancel">Cancelar</button>
                 <button type="submit" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-blue-500 text-white hover:bg-blue-600 h-10 px-4 py-2">Guardar Solicitud</button>
                </div>
            </EditForm>
        </div>
    </section>
